server:
  port: 8100

spring:
  application:
    name: api
  datasource:
    url: jdbc:mysql://localhost:3306/dolang
    username: user
    password: password
  elasticsearch:
    uris: http://localhost:9200
    username: elastic
    password: password
  data:
    elasticsearch:
      repositories:
        enabled: true
    redis:
      host: localhost
      port: 6379
      feed:
        prefix: "feed"
      bookmark:
        postfix: "bookmark"
      user:
        prefix: "user"
      count:
        postfix: "count"
  jpa:
    open-in-view: false
    properties:
      #      hibernate.generate_statistics: true
      hibernate.log_slow_query: 1000
      hibernate.highlight_sql: true
      jakarta.persistence.schema-generation.database.action: none #update
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8200
          jwk-set-uri: http://localhost:8200/oauth2/jwks

  batch:
    jdbc:
      initialize-schema: always

  # Spring Cloud AWS 설정 명시적으로 추가
  cloud:
    aws:
      region:
        static: ap-northeast-2  # ✅ Spring Cloud AWS 전용 설정
      credentials:
        access-key: ${aws.s3.accessKey}
        secret-key: ${aws.s3.secretKey}

  #서버로 넘어오는 파일 크기제한
  servlet:
    multipart:
      max-file-size: 50MB   # 개별 파일 최대 크기 (32MB보다 큰 값)
      max-request-size: 50MB  # 전체 요청 최대 크기
# AWS S3 설정
aws:
  region: ap-northeast-2
  s3:
    bucket: dolang
    accessKey: ${AWS_S3_ACCESS_KEY}
    secretKey: ${AWS_S3_SECRET_KEY}

logging:
  level:
    live.dolang: trace
    org.hibernate.SQL_SLOW: info
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace

openAi:
  apiKey: ${OPENAI_API_KEY}
  apiUrl: ${OPENAI_API_URL}